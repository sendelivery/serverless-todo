#!/bin/bash
#
# This script containerises the web app using Docker, tags it as "latest" and
# pushes it to ECR for our CodeDeploy job to later source during the blue /
# green deployment.
#
# This will happen even if there are no changes in the web app's source code.
#

repo=$1
api_endpoint_ssm_param=$2

echo "ECR Repository: " "$repo"
echo "API Endpoint SSM Param Name:" "$api_endpoint_ssm_param"

TodoApiEndpoint="$(aws ssm get-parameter --name "$api_endpoint_ssm_param" --query Parameter.Value)" || exit
TodoApiEndpoint=$(echo "$TodoApiEndpoint" | tr -d '"') # Removes double quotes

echo "API Endpoint:" "$TodoApiEndpoint"

cd web/ || exit

echo "TODO_API_ENDPOINT=""$TodoApiEndpoint" >.env.local

echo Logging in to Amazon ECR
aws ecr get-login-password | docker login --username AWS --password-stdin "$repo"
login_status=$?

if [ $login_status -ne 0 ]; then
  echo -e "\nError: push_to_ecr failed with exit code $login_status."
  exit $login_status
fi

echo Build and tag Docker image
docker build -t web-app .
docker tag web-app:latest "$repo":latest

echo Running docker push "$repo":latest
docker push "$repo":latest
